@prefix : <urn:example.org:> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# SimplePolicy goes one level deep
#   If a subject of type selectClass contains one of privatePredicate predicates, then we sound the alarm
{ 
    ?Pol a :SimplePolicy ;
        :selectClass ?Class ;
        :privatePredicate ?Pred .

    ?X a ?Class .
    ?X ?Pred ?Whatever .
}
=> { ?Pol a :PolicyFailure } .

# DeepNestedPolicy walks the graph
#  If a subject of class selectClass contains a privatePredicate or one of its branches contains it, then we sound the alarm
{ 
    ?Pol a :DeepNestedPolicy ;
        :selectClass ?Class ;
        :privatePredicate ?Pred .

    ?X a ?Class .
} 
=> 
{
    ?X a :PolicyFocus .

    { 
      ?Something a :PolicyFocus .
      ?Something ?Pred ?Whatever .
    } => { ?Pol a :PolicyFailure . } .

    # Search also all branches
    { 
       ?Something a :PolicyFocus .
       ?Something ?P ?O .
    } => { ?O a :PolicyFocus . } .
} .

# ScopePolicy screams when in a scope just a predicate is available
{ 
    ?Pol a :ScopePolicy ;
        :selectClass ?Class ;
        :privatePredicate ?Pred .

    ?X a ?Class .

    ?Anything ?Pred ?Whatever .
} 
=> { ?Pol a :PolicyFailure } .

{
    ?Pol a :PolicyFailure
} => false .
